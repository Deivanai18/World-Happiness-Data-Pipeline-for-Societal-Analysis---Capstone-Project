scala> val sixdf = spark.sql("select * from caps_proj.HWR2016")
Loading class `com.mysql.jdbc.Driver'. This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver'. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary.
23/09/21 00:22:52 WARN ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
sixdf: org.apache.spark.sql.DataFrame = [country: string, region: string ... 11 more fields]

scala> sixdf.show
+-------------+--------------------+-----+------+-------------+---------------+-------+-------+-------+-------+-------+----------+-------+
|      country|              region|hrank|hscore|lowconfidence|upperconfidence|economy| family| health|freedom|  trust|generosity|     dr|
+-------------+--------------------+-----+------+-------------+---------------+-------+-------+-------+-------+-------+----------+-------+
|      Denmark|      Western Europe|    1| 7.526|         7.46|          7.592|1.44178|1.16374|0.79504|0.57941|0.44453|   0.36171|2.73939|
|  Switzerland|      Western Europe|    2| 7.509|        7.428|           7.59|1.52733|1.14524|0.86303|0.58557|0.41203|   0.28083|2.69463|
|      Iceland|      Western Europe|    3| 7.501|        7.333|          7.669|1.42666|1.18326|0.86733|0.56624|0.14975|   0.47678|2.83137|
|       Norway|      Western Europe|    4| 7.498|        7.421|          7.575|1.57744| 1.1269|0.79579|0.59609|0.35776|   0.37895|2.66465|
|      Finland|      Western Europe|    5| 7.413|        7.351|          7.475|1.40598|1.13464|0.81091|0.57104|0.41004|   0.25492|2.82596|
|       Canada|       North America|    6| 7.404|        7.335|          7.473|1.44015| 1.0961| 0.8276| 0.5737|0.31329|   0.44834|2.70485|
|  Netherlands|      Western Europe|    7| 7.339|        7.284|          7.394|1.46468|1.02912|0.81231|0.55211|0.29927|   0.47416|2.70749|
|  New Zealand|Australia and New...|    8| 7.334|        7.264|          7.404|1.36066|1.17278|0.83096|0.58147|0.41904|   0.49401|2.47553|
|    Australia|Australia and New...|    9| 7.313|        7.241|          7.385|1.44443|1.10476| 0.8512|0.56837|0.32331|   0.47407| 2.5465|
|       Sweden|      Western Europe|   10| 7.291|        7.227|          7.355|1.45181|1.08764|0.83121|0.58218|0.40867|   0.38254|2.54734|
|       Israel|Middle East and N...|   11| 7.267|        7.199|          7.335|1.33766|0.99537|0.84917|0.36432|0.08728|   0.32288|3.31029|
|      Austria|      Western Europe|   12| 7.119|        7.045|          7.193|1.45038|1.08383|0.80565|0.54355|0.21348|   0.32865|2.69343|
|United States|       North America|   13| 7.104|         7.02|          7.188|1.50796|1.04782|  0.779|0.48163|0.14868|   0.41077|2.72782|
|   Costa Rica|Latin America and...|   14| 7.087|        6.999|          7.175|1.06879|1.02152|0.76146|0.55225|0.10547|   0.22553|3.35168|
|  Puerto Rico|Latin America and...|   15| 7.039|        6.794|          7.284|1.35943|1.08113|0.77758|0.46823|0.12275|   0.22202| 3.0076|
|      Germany|      Western Europe|   16| 6.994|         6.93|          7.058|1.44787|1.09774|0.81487|0.53466|0.28551|   0.30452|2.50931|
|       Brazil|Latin America and...|   17| 6.952|        6.875|          7.029|1.08754|1.03938|0.61415|0.40425|0.14166|   0.15776|3.50733|
|      Belgium|      Western Europe|   18| 6.929|        6.861|          6.997|1.42539|1.05249|0.81959|0.51354|0.26248|    0.2424|2.61355|
|      Ireland|      Western Europe|   19| 6.907|        6.836|          6.978|1.48341|1.16157|0.81455|0.54008|0.29754|   0.44963|2.15988|
|   Luxembourg|      Western Europe|   20| 6.871|        6.804|          6.938|1.69752|1.03999|0.84542| 0.5487|0.35329|   0.27571|2.11055|
+-------------+--------------------+-----+------+-------------+---------------+-------+-------+-------+-------+-------+----------+-------+
only showing top 20 rows

scala> val countcols = sixdf.columns.length
countcols: Int = 13

scala> import org.apache.spark.sql.functions._
import org.apache.spark.sql.functions._

scala> sixdf.describe().show()
+-------+-----------+--------------------+-----------------+------------------+------------------+------------------+------------------+------------------+-------------------+-------------------+-------------------+-------------------+------------------+
|summary|    country|              region|            hrank|            hscore|     lowconfidence|   upperconfidence|           economy|            family|             health|            freedom|              trust|         generosity|                dr|
+-------+-----------+--------------------+-----------------+------------------+------------------+------------------+------------------+------------------+-------------------+-------------------+-------------------+-------------------+------------------+
|  count|        157|                 157|              157|               157|               157|               157|               157|               157|                157|                157|                157|                157|               157|
|   mean|       null|                null|78.98089171974522|  5.38218471958379| 5.282394893609794|  5.48197453189048|0.9538798075240509|0.7936210858214433| 0.5576189804323919|0.37099388476378126|0.13762375784023503| 0.2426349043513939|2.3258065550949922|
| stddev|       null|                null|45.46603005479287|1.1416735287673851|1.1480425990038983|1.1364932380629744|0.4125954026935504|0.2667057451670051|0.22934919154388492|0.14550676850852373|0.11103791011812149|0.13375569112062244|0.5422199953446978|
|    min|Afghanistan|Australia and New...|                1|             2.905|             2.732|             3.078|               0.0|               0.0|                0.0|                0.0|                0.0|                0.0|           0.81789|
|    max|   Zimbabwe|      Western Europe|              157|             7.526|              7.46|             7.669|           1.82427|           1.18326|            0.95277|            0.60848|            0.50521|            0.81971|           3.83772|
+-------+-----------+--------------------+-----------------+------------------+------------------+------------------+------------------+------------------+-------------------+-------------------+-------------------+-------------------+------------------+

scala> val topHranksix = sixdf.filter($"Hrank"<=10)
topHranksix: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [country: string, region: string ... 11 more fields]

scala> topHranksix.show
+-----------+--------------------+-----+------+-------------+---------------+-------+-------+-------+-------+-------+----------+-------+
|    country|              region|hrank|hscore|lowconfidence|upperconfidence|economy| family| health|freedom|  trust|generosity|     dr|
+-----------+--------------------+-----+------+-------------+---------------+-------+-------+-------+-------+-------+----------+-------+
|    Denmark|      Western Europe|    1| 7.526|         7.46|          7.592|1.44178|1.16374|0.79504|0.57941|0.44453|   0.36171|2.73939|
|Switzerland|      Western Europe|    2| 7.509|        7.428|           7.59|1.52733|1.14524|0.86303|0.58557|0.41203|   0.28083|2.69463|
|    Iceland|      Western Europe|    3| 7.501|        7.333|          7.669|1.42666|1.18326|0.86733|0.56624|0.14975|   0.47678|2.83137|
|     Norway|      Western Europe|    4| 7.498|        7.421|          7.575|1.57744| 1.1269|0.79579|0.59609|0.35776|   0.37895|2.66465|
|    Finland|      Western Europe|    5| 7.413|        7.351|          7.475|1.40598|1.13464|0.81091|0.57104|0.41004|   0.25492|2.82596|
|     Canada|       North America|    6| 7.404|        7.335|          7.473|1.44015| 1.0961| 0.8276| 0.5737|0.31329|   0.44834|2.70485|
|Netherlands|      Western Europe|    7| 7.339|        7.284|          7.394|1.46468|1.02912|0.81231|0.55211|0.29927|   0.47416|2.70749|
|New Zealand|Australia and New...|    8| 7.334|        7.264|          7.404|1.36066|1.17278|0.83096|0.58147|0.41904|   0.49401|2.47553|
|  Australia|Australia and New...|    9| 7.313|        7.241|          7.385|1.44443|1.10476| 0.8512|0.56837|0.32331|   0.47407| 2.5465|
|     Sweden|      Western Europe|   10| 7.291|        7.227|          7.355|1.45181|1.08764|0.83121|0.58218|0.40867|   0.38254|2.54734|
+-----------+--------------------+-----+------+-------------+---------------+-------+-------+-------+-------+-------+----------+-------+

scala> val countsix = sixdf.count()
countsix: Long = 157

scala> val lastHranksix = sixdf.filter($"Hrank">=147).show()
+-----------+--------------------+-----+------+-------------+---------------+-------+-------+-------+-------+-------+----------+-------+
|    country|              region|hrank|hscore|lowconfidence|upperconfidence|economy| family| health|freedom|  trust|generosity|     dr|
+-----------+--------------------+-----+------+-------------+---------------+-------+-------+-------+-------+-------+----------+-------+
|      Yemen|Middle East and N...|  147| 3.724|        3.621|          3.827|0.57939|0.47493|0.31048| 0.2287|0.05892|   0.09821|1.97295|
| Madagascar|  Sub-Saharan Africa|  148| 3.695|        3.621|          3.769|0.27954|0.46115|0.37109|0.13684|0.07506|    0.2204|2.15075|
|   Tanzania|  Sub-Saharan Africa|  149| 3.666|        3.561|          3.771|0.47155|0.77623|  0.357| 0.3176|0.05099|   0.31472|1.37769|
|    Liberia|  Sub-Saharan Africa|  150| 3.622|        3.463|          3.781|0.10706|0.50353|0.23165|0.25748|0.04852|   0.24063|2.23284|
|     Guinea|  Sub-Saharan Africa|  151| 3.607|        3.533|          3.681|0.22415| 0.3109|0.18829|0.30953| 0.1192|   0.29914|2.15604|
|     Rwanda|  Sub-Saharan Africa|  152| 3.515|        3.444|          3.586|0.32846|0.61586|0.31865| 0.5432|0.50521|   0.23552|0.96819|
|      Benin|  Sub-Saharan Africa|  153| 3.484|        3.404|          3.564|0.39499|0.10419|0.21028|0.39747|0.06681|    0.2018|2.10812|
|Afghanistan|       Southern Asia|  154|  3.36|        3.288|          3.432|0.38227|0.11037|0.17344| 0.1643|0.07112|   0.31268|2.14558|
|       Togo|  Sub-Saharan Africa|  155| 3.303|        3.192|          3.414|0.28123|    0.0|0.24811|0.34678|0.11587|   0.17517| 2.1354|
|      Syria|Middle East and N...|  156| 3.069|        2.936|          3.202|0.74719|0.14866|0.62994|0.06912|0.17233|   0.48397|0.81789|
|    Burundi|  Sub-Saharan Africa|  157| 2.905|        2.732|          3.078|0.06831|0.23442|0.15747| 0.0432|0.09419|    0.2029|2.10404|
+-----------+--------------------+-----+------+-------------+---------------+-------+-------+-------+-------+-------+----------+-------+

lastHranksix: Unit = ()

scala> sixdf.printSchema()
root
 |-- country: string (nullable = true)
 |-- region: string (nullable = true)
 |-- hrank: integer (nullable = true)
 |-- hscore: float (nullable = true)
 |-- lowconfidence: float (nullable = true)
 |-- upperconfidence: float (nullable = true)
 |-- economy: float (nullable = true)
 |-- family: float (nullable = true)
 |-- health: float (nullable = true)
 |-- freedom: float (nullable = true)
 |-- trust: float (nullable = true)
 |-- generosity: float (nullable = true)
 |-- dr: float (nullable = true)

scala> val avgscore = spark.sql(" select country, avg(Hscore) as AverageHappinessScore from caps_proj.HWR2016 group by country order by AverageHappinessScore desc")
avgscore: org.apache.spark.sql.DataFrame = [country: string, AverageHappinessScore: double]

scala> avgscore.show
+-------------+---------------------+                                           
|      country|AverageHappinessScore|
+-------------+---------------------+
|      Denmark|    7.526000022888184|
|  Switzerland|    7.508999824523926|
|      Iceland|    7.500999927520752|
|       Norway|    7.498000144958496|
|      Finland|    7.413000106811523|
|       Canada|   7.4039998054504395|
|  Netherlands|    7.339000225067139|
|  New Zealand|    7.334000110626221|
|    Australia|    7.313000202178955|
|       Sweden|    7.290999889373779|
|       Israel|    7.267000198364258|
|      Austria|     7.11899995803833|
|United States|    7.104000091552734|
|   Costa Rica|    7.086999893188477|
|  Puerto Rico|    7.039000034332275|
|      Germany|     6.99399995803833|
|       Brazil|    6.952000141143799|
|      Belgium|    6.928999900817871|
|      Ireland|   6.9070000648498535|
|   Luxembourg|    6.870999813079834|
+-------------+---------------------+
only showing top 20 rows

scala> val rankdf = spark.sql(" select country, Hrank from caps_proj.HWR2016")
rankdf: org.apache.spark.sql.DataFrame = [country: string, Hrank: int]

scala> rankdf.show
+-------------+-----+                                                           
|      country|Hrank|
+-------------+-----+
|      Denmark|    1|
|  Switzerland|    2|
|      Iceland|    3|
|       Norway|    4|
|      Finland|    5|
|       Canada|    6|
|  Netherlands|    7|
|  New Zealand|    8|
|    Australia|    9|
|       Sweden|   10|
|       Israel|   11|
|      Austria|   12|
|United States|   13|
|   Costa Rica|   14|
|  Puerto Rico|   15|
|      Germany|   16|
|       Brazil|   17|
|      Belgium|   18|
|      Ireland|   19|
|   Luxembourg|   20|
+-------------+-----+
only showing top 20 rows

scala> val joinedDF = avgscore.join(rankdf, Seq("country"), "inner")
joinedDF: org.apache.spark.sql.DataFrame = [country: string, AverageHappinessScore: double ... 1 more field]

scala> joinedDF.show
+-------------+---------------------+-----+                                     
|      country|AverageHappinessScore|Hrank|
+-------------+---------------------+-----+
|      Denmark|    7.526000022888184|    1|
|  Switzerland|    7.508999824523926|    2|
|      Iceland|    7.500999927520752|    3|
|       Norway|    7.498000144958496|    4|
|      Finland|    7.413000106811523|    5|
|       Canada|   7.4039998054504395|    6|
|  Netherlands|    7.339000225067139|    7|
|  New Zealand|    7.334000110626221|    8|
|    Australia|    7.313000202178955|    9|
|       Sweden|    7.290999889373779|   10|
|       Israel|    7.267000198364258|   11|
|      Austria|     7.11899995803833|   12|
|United States|    7.104000091552734|   13|
|   Costa Rica|    7.086999893188477|   14|
|  Puerto Rico|    7.039000034332275|   15|
|      Germany|     6.99399995803833|   16|
|       Brazil|    6.952000141143799|   17|
|      Belgium|    6.928999900817871|   18|
|      Ireland|   6.9070000648498535|   19|
|   Luxembourg|    6.870999813079834|   20|
+-------------+---------------------+-----+
only showing top 20 rows

scala> val avgeco = spark.sql(" select country, avg(economy) as AverageEconomyScore from caps_proj.HWR2016 group by country order by AverageEconomyScore desc")
avgeco: org.apache.spark.sql.DataFrame = [country: string, AverageEconomyScore: double]

scala> avgeco.show
+--------------------+-------------------+                                      
|             country|AverageEconomyScore|
+--------------------+-------------------+
|               Qatar| 1.8242700099945068|
|          Luxembourg| 1.6975200176239014|
|           Singapore|  1.645550012588501|
|              Kuwait| 1.6171400547027588|
|              Norway| 1.5774400234222412|
|United Arab Emirates| 1.5735199451446533|
|         Switzerland| 1.5273300409317017|
|           Hong Kong|  1.510699987411499|
|       United States| 1.5079599618911743|
|        Saudi Arabia| 1.4895299673080444|
|             Ireland| 1.4834100008010864|
|         Netherlands| 1.4646799564361572|
|              Sweden| 1.4518100023269653|
|             Austria| 1.4503799676895142|
|             Germany| 1.4478700160980225|
|           Australia| 1.4444299936294556|
|             Denmark| 1.4417799711227417|
|             Bahrain| 1.4402400255203247|
|              Canada| 1.4401500225067139|
|             Iceland| 1.4266599416732788|
+--------------------+-------------------+
only showing top 20 rows

scala> val avgfreedom = spark.sql(" select country, avg(freedom) as AverageFreedomScore from caps_proj.HWR2016 group by country order by AverageFreedomScore desc")
avgfreedom: org.apache.spark.sql.DataFrame = [country: string, AverageFreedomScore: double]

scala> avgfreedom.show
+--------------------+-------------------+                                      
|             country|AverageFreedomScore|
+--------------------+-------------------+
|          Uzbekistan| 0.6084799766540527|
|              Norway| 0.5960900187492371|
|            Cambodia| 0.5885199904441833|
|         Switzerland| 0.5855699777603149|
|              Sweden| 0.5821800231933594|
|         New Zealand| 0.5814700126647949|
|             Denmark| 0.5794100165367126|
|              Canada| 0.5737000107765198|
|             Finland| 0.5710399746894836|
|           Australia|   0.56836998462677|
|             Somalia| 0.5677800178527832|
|               Qatar|  0.566789984703064|
|             Iceland| 0.5662400126457214|
|United Arab Emirates| 0.5621500015258789|
|             Vietnam| 0.5595399737358093|
|          Costa Rica| 0.5522500276565552|
|         Netherlands| 0.5521100163459778|
|               Malta| 0.5499399900436401|
|          Luxembourg| 0.5486999750137329|
|         Philippines| 0.5485399961471558|
+--------------------+-------------------+
only showing top 20 rows

scala> val avgfamily = spark.sql(" select country, avg(family) as AverageFamilyScore from caps_proj.HWR2016 group by country order by AverageFamilyScore desc")
avgfamily: org.apache.spark.sql.DataFrame = [country: string, AverageFamilyScore: double]

scala> avgfamily.show
+--------------+------------------+                                             
|       country|AverageFamilyScore|
+--------------+------------------+
|       Iceland|1.1832599639892578|
|   New Zealand|1.1727800369262695|
|    Uzbekistan|1.1680999994277954|
|       Denmark|1.1637400388717651|
|       Ireland|1.1615699529647827|
|   Switzerland|1.1452399492263794|
|       Finland|1.1346399784088135|
|         Spain|1.1294499635696411|
|        Norway|1.1268999576568604|
|      Paraguay| 1.111109972000122|
|     Australia|1.1047600507736206|
|         Malta|1.0987900495529175|
|       Germany|1.0977400541305542|
|        Canada|1.0960999727249146|
|      Mongolia|1.0898300409317017|
|        Sweden|1.0876400470733643|
|United Kingdom|1.0867199897766113|
|       Austria|1.0838299989700317|
|      Slovakia|1.0826799869537354|
|   Puerto Rico| 1.081130027770996|
+--------------+------------------+
only showing top 20 rows

scala> val avghealth = spark.sql(" select country, avg(health) as AverageHealthScore from caps_proj.HWR2016 group by country order by AverageHealthScore desc")
avghealth: org.apache.spark.sql.DataFrame = [country: string, AverageHealthScore: double]

scala> avghealth.show
+------------+------------------+                                               
|     country|AverageHealthScore|
+------------+------------------+
|   Hong Kong|0.9527699947357178|
|   Singapore|  0.94718998670578|
|       Japan|0.9149100184440613|
| South Korea|0.8864499926567078|
|       Spain|0.8789600133895874|
|     Iceland| 0.867330014705658|
| Switzerland|0.8630300164222717|
|   Australia|0.8511999845504761|
|       Italy|0.8510199785232544|
|      Israel|0.8491700291633606|
|      Cyprus| 0.848800003528595|
|  Luxembourg|0.8454200029373169|
|North Cyprus|0.8414199948310852|
|      France|0.8379499912261963|
|      Sweden|0.8312100172042847|
| New Zealand|0.8309599757194519|
|      Canada|0.8276000022888184|
|     Belgium|0.8195899724960327|
|       Chile|0.8188300132751465|
|     Germany|0.8148699998855591|
+------------+------------------+
only showing top 20 rows

scala> val avgtrust = spark.sql(" select country, avg(trust) as AverageTrustScore from caps_proj.HWR2016 group by country order by AverageTrustScore desc")
avgtrust: org.apache.spark.sql.DataFrame = [country: string, AverageTrustScore: double]

scala> avgtrust.show
+--------------------+-------------------+                                      
|             country|  AverageTrustScore|
+--------------------+-------------------+
|              Rwanda| 0.5052099823951721|
|               Qatar| 0.4804899990558624|
|           Singapore|  0.469870001077652|
|             Denmark|0.44453001022338867|
|         New Zealand| 0.4190399944782257|
|         Switzerland|0.41203001141548157|
|             Finland| 0.4100399911403656|
|              Sweden|0.40867000818252563|
|   Somaliland Region| 0.3679400086402893|
|              Norway| 0.3577600121498108|
|United Arab Emirates| 0.3556100130081177|
|          Luxembourg|0.35328999161720276|
|           Australia|  0.323309987783432|
|             Georgia| 0.3188000023365021|
|           Hong Kong| 0.3164699971675873|
|              Canada|  0.313289999961853|
|             Somalia| 0.3118000030517578|
|        Saudi Arabia|0.30008000135421753|
|         Netherlands|0.29927000403404236|
|             Ireland|0.29754000902175903|
+--------------------+-------------------+
only showing top 20 rows

scala> val avggenerosity = spark.sql(" select country, avg(generosity) as AverageGenerosityScore from caps_proj.HWR2016 group by country order by AverageGenerosityScore desc")
avggenerosity: org.apache.spark.sql.DataFrame = [country: string, AverageGenerosityScore: double]

scala> avggenerosity.show
+-----------------+----------------------+                                      
|          country|AverageGenerosityScore|
+-----------------+----------------------+
|          Myanmar|    0.8197100162506104|
|         Thailand|    0.5869600176811218|
|        Indonesia|    0.5652099847793579|
|            Malta|    0.5623700022697449|
|Somaliland Region|    0.5147899985313416|
|   United Kingdom|    0.5015599727630615|
|      New Zealand|   0.49401000142097473|
|           Bhutan|    0.4854600131511688|
|            Syria|    0.4839699864387512|
|            Haiti|   0.47957998514175415|
|          Iceland|    0.4767799973487854|
|      Netherlands|   0.47415998578071594|
|        Australia|    0.4740700125694275|
|        Sri Lanka|   0.46977999806404114|
|          Ireland|    0.4496299922466278|
|           Canada|    0.4483399987220764|
|             Laos|    0.4307900071144104|
|         Malaysia|    0.4147399961948395|
|            Kenya|   0.41328001022338867|
|    United States|    0.4107699990272522|
+-----------------+----------------------+
only showing top 20 rows

scala> sixdf.select("region").distinct().show()
+--------------------+                                                          
|              region|
+--------------------+
|Middle East and N...|
|  Sub-Saharan Africa|
|Australia and New...|
|       North America|
|       Southern Asia|
|Latin America and...|
|      Western Europe|
|Central and Easte...|
|        Eastern Asia|
|   Southeastern Asia|
+--------------------+

scala> sixdf.createOrReplaceTempView("HWR2016")

scala> spark.sql("SELECT AVG(Hscore) AS AvgScore, MIN(Hscore) AS MinScore, MAX(Hscore) AS MaxScore FROM HWR2016").show()
+----------------+--------+--------+
|        AvgScore|MinScore|MaxScore|
+----------------+--------+--------+
|5.38218471958379|   2.905|   7.526|
+----------------+--------+--------+

scala> spark.sql("SELECT region, count(region) from HWR2016 group by region").show()
+--------------------+-------------+                                            
|              region|count(region)|
+--------------------+-------------+
|Middle East and N...|           19|
|  Sub-Saharan Africa|           38|
|Australia and New...|            2|
|       North America|            2|
|       Southern Asia|            7|
|Latin America and...|           24|
|      Western Europe|           21|
|Central and Easte...|           29|
|        Eastern Asia|            6|
|   Southeastern Asia|            9|
+--------------------+-------------+

scala> spark.sql("SELECT region, AVG(Hscore) AS AvgScore FROM HWR2016 GROUP BY region ORDER BY AvgScore DESC").show()
+--------------------+-----------------+                                        
|              region|         AvgScore|
+--------------------+-----------------+
|Australia and New...|7.323500156402588|
|       North America|7.253999948501587|
|      Western Europe|6.685666674659366|
|Latin America and...|6.101750016212463|
|        Eastern Asia| 5.62416672706604|
|Middle East and N...|5.386052646135029|
|Central and Easte...|5.370689655172414|
|   Southeastern Asia|5.338888857099745|
|       Southern Asia|4.563285725457328|
|  Sub-Saharan Africa|4.136421046758953|
+--------------------+-----------------+

scala> spark.sql("SELECT region, AVG(economy) AS AvgEconomy FROM HWR2016 GROUP BY region ORDER BY AvgEconomy DESC").show()
+--------------------+------------------+                                       
|              region|        AvgEconomy|
+--------------------+------------------+
|       North America| 1.474054992198944|
|      Western Europe| 1.417055709021432|
|Australia and New...|1.4025449752807617|
|        Eastern Asia|1.2773116528987885|
|Middle East and N...|1.1393231561309414|
|Central and Easte...|1.0475368900545712|
|Latin America and...|0.9934100074072679|
|   Southeastern Asia|0.8963811198870341|
|       Southern Asia|0.6606714299746922|
|  Sub-Saharan Africa|  0.47432131565323|
+--------------------+------------------+

scala> spark.sql("SELECT region, AVG(family) AS AvgFamily FROM HWR2016 GROUP BY region ORDER BY AvgFamily DESC").show()
+--------------------+-------------------+                                      
|              region|          AvgFamily|
+--------------------+-------------------+
|Australia and New...|  1.138770043849945|
|       North America| 1.0719599723815918|
|      Western Europe|  1.042452369417463|
|        Eastern Asia| 0.9104283352692922|
|Latin America and...| 0.8984320933620135|
|Central and Easte...| 0.8618551765022606|
|   Southeastern Asia| 0.7917555636829801|
|Middle East and N...| 0.6956442139650646|
|  Sub-Saharan Africa| 0.5936555299711855|
|       Southern Asia|0.48069429078272413|
+--------------------+-------------------+

scala> spark.sql("SELECT region, AVG(health) AS AvgHealth FROM HWR2016 GROUP BY region ORDER BY AvgHealth DESC").show()
+--------------------+------------------+                                       
|              region|         AvgHealth|
+--------------------+------------------+
|Australia and New...| 0.841079980134964|
|      Western Europe|0.8257538080215454|
|        Eastern Asia|0.8066800038019816|
|       North America|0.8032999932765961|
|Central and Easte...|0.6315920671512341|
|Middle East and N...|0.6164378963018718|
|Latin America and...|0.6127025038003922|
|   Southeastern Asia|0.5613688925902048|
|       Southern Asia|0.4536699929407665|
|  Sub-Saharan Africa|0.2398723667781604|
+--------------------+------------------+

scala> spark.sql("SELECT region, AVG(freedom) AS AvgFreedom FROM HWR2016 GROUP BY region ORDER BY AvgFreedom DESC").show()
+--------------------+-------------------+                                      
|              region|         AvgFreedom|
+--------------------+-------------------+
|Australia and New...| 0.5749199986457825|
|       North America| 0.5276650041341782|
|   Southeastern Asia|0.49012332492404515|
|      Western Europe|  0.477587144999277|
|Latin America and...| 0.4266462524731954|
|        Eastern Asia| 0.3872816612323125|
|       Southern Asia| 0.3500257134437561|
|  Sub-Saharan Africa| 0.3154242098404977|
|Middle East and N...|0.30976894772366476|
|Central and Easte...| 0.3005282735002452|
+--------------------+-------------------+

scala> spark.sql("SELECT region, AVG(trust) AS AvgTrust FROM HWR2016 GROUP BY region ORDER BY AvgTrust DESC").show()
+--------------------+-------------------+                                      
|              region|           AvgTrust|
+--------------------+-------------------+
|Australia and New...|0.37117499113082886|
|      Western Europe|0.23254428710788488|
|       North America|0.23098500072956085|
|Middle East and N...|0.16152631638473586|
|   Southeastern Asia| 0.1481044452585694|
|  Sub-Saharan Africa|0.12037894742465333|
|        Eastern Asia|  0.118346666606764|
|Latin America and...|0.10601624908546607|
|       Southern Asia|0.10489856877497264|
|Central and Easte...|0.08807172372551827|
+--------------------+-------------------+

scala> spark.sql("SELECT region, AVG(generosity) AS AvgGenerosity FROM HWR2016 GROUP BY region ORDER BY AvgGenerosity DESC").show()
+--------------------+-------------------+                                      
|              region|      AvgGenerosity|
+--------------------+-------------------+
|Australia and New...| 0.4840400069952011|
|   Southeastern Asia| 0.4461500032080544|
|       North America| 0.4295549988746643|
|       Southern Asia|0.34328143085752216|
|      Western Europe|  0.304714760964825|
|  Sub-Saharan Africa| 0.2263484210952332|
|        Eastern Asia|0.22356333335240683|
|Latin America and...| 0.2084283324268957|
|Middle East and N...|0.18674894539933456|
|Central and Easte...|0.17089758633539595|
+--------------------+-------------------+

scala> spark.sql("SELECT corr(lowconfidence,upperconfidence) AS Happiness_Correlation FROM HWR2016").show()
+---------------------+                                                         
|Happiness_Correlation|
+---------------------+
|    0.997919013564101|
+---------------------+


